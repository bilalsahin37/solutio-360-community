# Generated by Django 5.2.2 on 2025-06-18 12:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users/avatars/%Y/%m/', verbose_name='avatar')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='position')),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='employee ID')),
                ('is_verified', models.BooleanField(default=False, verbose_name='is verified')),
                ('verification_token', models.CharField(blank=True, max_length=100, null=True, verbose_name='verification token')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='last login IP')),
                ('two_factor_enabled', models.BooleanField(default=False, verbose_name='two factor enabled')),
                ('two_factor_secret', models.CharField(blank=True, max_length=32, null=True, verbose_name='two factor secret')),
                ('notification_preferences', models.JSONField(default=dict, verbose_name='notification preferences')),
                ('language_preference', models.CharField(default='tr', max_length=10, verbose_name='language preference')),
                ('timezone', models.CharField(default='Europe/Istanbul', max_length=50, verbose_name='timezone')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('address', models.TextField(blank=True, verbose_name='address')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_departments', to=settings.AUTH_USER_MODEL, verbose_name='manager')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='users.department', verbose_name='parent department')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'department',
                'verbose_name_plural': 'departments',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='users.department', verbose_name='department'),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('permissions', models.JSONField(default=list, verbose_name='permissions')),
                ('is_system', models.BooleanField(default=False, verbose_name='is system')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='users.department', verbose_name='department')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('action', models.CharField(choices=[('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('PASSWORD_CHANGE', 'Password Change'), ('PROFILE_UPDATE', 'Profile Update'), ('ROLE_CHANGE', 'Role Change'), ('PERMISSION_CHANGE', 'Permission Change'), ('OTHER', 'Other')], max_length=20, verbose_name='action')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP address')),
                ('user_agent', models.TextField(verbose_name='user agent')),
                ('details', models.JSONField(default=dict, verbose_name='details')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user activity',
                'verbose_name_plural': 'user activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('notification_type', models.CharField(choices=[('SYSTEM', 'System'), ('COMPLAINT', 'Complaint'), ('ROLE', 'Role'), ('DEPARTMENT', 'Department'), ('OTHER', 'Other')], max_length=20, verbose_name='notification type')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('message', models.TextField(verbose_name='message')),
                ('is_read', models.BooleanField(default=False, verbose_name='is read')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='read at')),
                ('data', models.JSONField(default=dict, verbose_name='data')),
                ('priority', models.PositiveSmallIntegerField(default=0, verbose_name='priority')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user notification',
                'verbose_name_plural': 'user notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Erkek'), ('F', 'Kadın'), ('O', 'Diğer')], max_length=10, verbose_name='Cinsiyet')),
                ('address', models.TextField(blank=True, verbose_name='Adres')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Şehir')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Ülke')),
                ('alternative_email', models.EmailField(blank=True, max_length=254, verbose_name='Alternatif E-posta')),
                ('alternative_phone', models.CharField(blank=True, max_length=20, verbose_name='Alternatif Telefon')),
                ('linkedin', models.URLField(blank=True, verbose_name='LinkedIn')),
                ('twitter', models.URLField(blank=True, verbose_name='Twitter')),
                ('facebook', models.URLField(blank=True, verbose_name='Facebook')),
                ('instagram', models.URLField(blank=True, verbose_name='Instagram')),
                ('language', models.CharField(choices=[('tr', 'Türkçe'), ('en', 'English')], default='tr', max_length=10, verbose_name='Dil')),
                ('timezone', models.CharField(default='Europe/Istanbul', max_length=50, verbose_name='Saat Dilimi')),
                ('theme', models.CharField(choices=[('light', 'Açık'), ('dark', 'Koyu'), ('system', 'Sistem')], default='system', max_length=20, verbose_name='Tema')),
                ('profile_views', models.PositiveIntegerField(default=0, verbose_name='Profil Görüntülenme')),
                ('last_profile_update', models.DateTimeField(auto_now=True, verbose_name='Son Profil Güncelleme')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Profili',
                'verbose_name_plural': 'Kullanıcı Profilleri',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('is_primary', models.BooleanField(default=False, verbose_name='is primary')),
                ('valid_from', models.DateTimeField(blank=True, null=True, verbose_name='valid from')),
                ('valid_until', models.DateTimeField(blank=True, null=True, verbose_name='valid until')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='users.department', verbose_name='department')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='users.role', verbose_name='role')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user role',
                'verbose_name_plural': 'user roles',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('session_key', models.CharField(max_length=40, unique=True, verbose_name='session key')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP address')),
                ('user_agent', models.TextField(verbose_name='user agent')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='last activity')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('deleted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='deleted by')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user session',
                'verbose_name_plural': 'user sessions',
                'ordering': ['-last_activity'],
            },
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['code'], name='users_depar_code_872430_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['parent'], name='users_depar_parent__fa7aa8_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_user_email_6f2530_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone_number'], name='users_user_phone_n_7fe504_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['employee_id'], name='users_user_employe_e638d5_idx'),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['code'], name='users_role_code_7e9d84_idx'),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['department'], name='users_role_departm_64b865_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', 'action'], name='users_usera_user_id_c178f5_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['created_at'], name='users_usera_created_828ca1_idx'),
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['user', 'is_read'], name='users_usern_user_id_a2ee7f_idx'),
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['notification_type', 'priority'], name='users_usern_notific_8ba88d_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['user', 'is_primary'], name='users_userr_user_id_acb348_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['role', 'department'], name='users_userr_role_id_3e6b39_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'role', 'department')},
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['user', 'is_active'], name='users_users_user_id_3887fe_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['last_activity'], name='users_users_last_ac_62f4a2_idx'),
        ),
    ]
