# Generated by Django 5.2.2 on 2025-06-18 12:36

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('IN_REVIEW', 'In Review'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed'), ('REOPENED', 'Reopened')], default='DRAFT', max_length=20, verbose_name='status')),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20, verbose_name='priority')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='due date')),
                ('resolution', models.TextField(blank=True, verbose_name='resolution')),
                ('resolution_date', models.DateTimeField(blank=True, null=True, verbose_name='resolution date')),
                ('satisfaction_rating', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='satisfaction rating')),
                ('satisfaction_comment', models.TextField(blank=True, verbose_name='satisfaction comment')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='is anonymous')),
                ('is_confidential', models.BooleanField(default=False, verbose_name='is confidential')),
            ],
            options={
                'verbose_name': 'complaint',
                'verbose_name_plural': 'complaints',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintAttachment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('file', models.FileField(upload_to='complaints/attachments/%Y/%m/', verbose_name='file')),
                ('filename', models.CharField(max_length=255, verbose_name='filename')),
                ('file_type', models.CharField(max_length=100, verbose_name='file type')),
                ('file_size', models.PositiveIntegerField(verbose_name='file size')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='description')),
            ],
            options={
                'verbose_name': 'complaint attachment',
                'verbose_name_plural': 'complaint attachments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintCategory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icon')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='color')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('sla_hours', models.PositiveIntegerField(default=24, verbose_name='SLA hours')),
            ],
            options={
                'verbose_name': 'complaint category',
                'verbose_name_plural': 'complaint categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintComment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('content', models.TextField(verbose_name='content')),
                ('is_internal', models.BooleanField(default=False, verbose_name='is internal')),
            ],
            options={
                'verbose_name': 'complaint comment',
                'verbose_name_plural': 'complaint comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintNotification',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('notification_type', models.CharField(choices=[('STATUS_CHANGE', 'Status Change'), ('ASSIGNMENT', 'Assignment'), ('COMMENT', 'Comment'), ('DUE_DATE', 'Due Date'), ('RESOLUTION', 'Resolution')], max_length=20, verbose_name='notification type')),
                ('message', models.TextField(verbose_name='message')),
                ('is_read', models.BooleanField(default=False, verbose_name='is read')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='read at')),
            ],
            options={
                'verbose_name': 'complaint notification',
                'verbose_name_plural': 'complaint notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintTag',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='color')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='description')),
            ],
            options={
                'verbose_name': 'complaint tag',
                'verbose_name_plural': 'complaint tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintWorkflow',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('from_status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('IN_REVIEW', 'In Review'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed'), ('REOPENED', 'Reopened')], max_length=20, verbose_name='from status')),
                ('to_status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('IN_REVIEW', 'In Review'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed'), ('REOPENED', 'Reopened')], max_length=20, verbose_name='to status')),
                ('comment', models.TextField(blank=True, verbose_name='comment')),
                ('transition_time', models.DateTimeField(auto_now_add=True, verbose_name='transition time')),
            ],
            options={
                'verbose_name': 'complaint workflow',
                'verbose_name_plural': 'complaint workflows',
                'ordering': ['-transition_time'],
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Öncelik Adı')),
                ('level', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Öncelik Seviyesi')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='Renk Kodu')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('response_time', models.DurationField(verbose_name='Yanıt Süresi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Öncelik',
                'verbose_name_plural': 'Öncelikler',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Durum Adı')),
                ('code', models.SlugField(unique=True, verbose_name='Durum Kodu')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='Renk Kodu')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('is_final', models.BooleanField(default=False, verbose_name='Son Durum')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('order', models.IntegerField(default=0, verbose_name='Sıralama')),
            ],
            options={
                'verbose_name': 'Durum',
                'verbose_name_plural': 'Durumlar',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Subunit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
